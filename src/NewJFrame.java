
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.net.URI;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.embed.swing.JFXPanel;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;
import javax.swing.JOptionPane;
import javafx.util.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Adam
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        hideButton();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        browseWavButton = new javax.swing.JButton();
        selectWavLabel = new javax.swing.JLabel();
        fileWavLabel = new javax.swing.JLabel();
        playButton = new javax.swing.JButton();
        seekButton = new javax.swing.JButton();
        selectTimedLabel = new javax.swing.JLabel();
        browseTimedButton = new javax.swing.JButton();
        fileTimedLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        browseWavButton.setText("Browse");
        browseWavButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseWavButtonActionPerformed(evt);
            }
        });

        selectWavLabel.setText("Select wav file:");

        fileWavLabel.setText("...");

        playButton.setText("Play wav");
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });

        seekButton.setText("seek");
        seekButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seekButtonActionPerformed(evt);
            }
        });

        selectTimedLabel.setText("Select timed text:");

        browseTimedButton.setText("Browse");
        browseTimedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseTimedButtonActionPerformed(evt);
            }
        });

        fileTimedLabel.setText("...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(selectWavLabel)
                        .addGap(21, 21, 21)
                        .addComponent(browseWavButton)
                        .addGap(18, 18, 18)
                        .addComponent(fileWavLabel))
                    .addComponent(playButton)
                    .addComponent(seekButton)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(selectTimedLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(browseTimedButton)
                        .addGap(18, 18, 18)
                        .addComponent(fileTimedLabel)))
                .addContainerGap(198, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(browseWavButton)
                    .addComponent(selectWavLabel)
                    .addComponent(fileWavLabel))
                .addGap(18, 18, 18)
                .addComponent(playButton)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectTimedLabel)
                    .addComponent(browseTimedButton)
                    .addComponent(fileTimedLabel))
                .addGap(18, 18, 18)
                .addComponent(seekButton)
                .addContainerGap(140, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void hideButton() {
        playButton.setVisible(false);
    }
    
    String wavPath;
    private void browseWavButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseWavButtonActionPerformed
        //Create a file chooser
        final JFileChooser fc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "WAV file", "wav");
        fc.setFileFilter(filter);
        int returnVal = fc.showOpenDialog(null);
        File wavFile = fc.getSelectedFile();
        URI path = wavFile.toURI();
        wavPath = path.toString();
        String fileName = fc.getName(wavFile);
        fileWavLabel.setText(fileName);
        playButton.setVisible(true);
    }//GEN-LAST:event_browseWavButtonActionPerformed
        
    Media hit;
    MediaPlayer mediaPlayer;
    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed
        //Play selected file
        JFXPanel forToolkit = new JFXPanel();
        hit = new Media(wavPath);
       // durationLabel.setText(hit.getDuration().toString());
        mediaPlayer = new MediaPlayer(hit);
        //JOptionPane.showMessageDialog(this, mediaPlayer.getCurrentTime());
        mediaPlayer.play();
        try {
            Thread.sleep(1000);
        } catch (InterruptedException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        Duration stopTime = mediaPlayer.getStopTime();
        JOptionPane.showMessageDialog(this, stopTime);
        
    }//GEN-LAST:event_playButtonActionPerformed

    private void seekButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seekButtonActionPerformed
        Duration seekVal = Duration.hours(.1999);
        mediaPlayer.seek(seekVal);
        mediaPlayer.play();
    }//GEN-LAST:event_seekButtonActionPerformed
    String textPath;
    private void browseTimedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseTimedButtonActionPerformed
        //Create a file chooser
        final JFileChooser fc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "TEXT file", "txt");
        fc.setFileFilter(filter);
        int returnVal = fc.showOpenDialog(null);
        File textFile = fc.getSelectedFile();
        // FileReader?????
        try {
            FileReader timedText = new FileReader(textFile);
            BufferedReader bufRead = new BufferedReader(timedText);
            String myLine = null;
            List<String> inTimes = null;
            //while ( (myLine = bufRead.readLine()) != null) {
            //    inTimes.add(myLine);
            //}
            JOptionPane.showMessageDialog(this, bufRead.readLine());
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        URI path = textFile.toURI();
        textPath = path.toString();
        String fileName = fc.getName(textFile);
        fileTimedLabel.setText(fileName);
    }//GEN-LAST:event_browseTimedButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseTimedButton;
    private javax.swing.JButton browseWavButton;
    private javax.swing.JLabel fileTimedLabel;
    private javax.swing.JLabel fileWavLabel;
    private javax.swing.JButton playButton;
    private javax.swing.JButton seekButton;
    private javax.swing.JLabel selectTimedLabel;
    private javax.swing.JLabel selectWavLabel;
    // End of variables declaration//GEN-END:variables
}