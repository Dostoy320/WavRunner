
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.net.URI;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.embed.swing.JFXPanel;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;
//import javax.swing.JOptionPane;
import javafx.util.*;
//import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.TimeZone;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Adam
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        hideButton();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        browseWavButton = new javax.swing.JButton();
        selectWavLabel = new javax.swing.JLabel();
        fileWavLabel = new javax.swing.JLabel();
        selectTimedLabel = new javax.swing.JLabel();
        browseTimedButton = new javax.swing.JButton();
        fileTimedLabel = new javax.swing.JLabel();
        startTimeLabel = new javax.swing.JLabel();
        startTimeField = new javax.swing.JFormattedTextField();
        startTimeButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        prevButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(600, 300));

        browseWavButton.setText("Browse");
        browseWavButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseWavButtonActionPerformed(evt);
            }
        });

        selectWavLabel.setText("Select wav file:");

        fileWavLabel.setText("...");

        selectTimedLabel.setText("Select timed text:");

        browseTimedButton.setText("Browse");
        browseTimedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseTimedButtonActionPerformed(evt);
            }
        });

        fileTimedLabel.setText("...");

        startTimeLabel.setText("Start Time:");

        startTimeField.setColumns(6);
        startTimeField.setText("00:58:30");

        startTimeButton.setText("Load Start Times");
        startTimeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startTimeButtonActionPerformed(evt);
            }
        });

        prevButton.setText("Previous");
        prevButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevButtonActionPerformed(evt);
            }
        });

        nextButton.setText("Next");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Stop");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(prevButton)
                .addGap(26, 26, 26)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(nextButton)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prevButton)
                    .addComponent(nextButton)
                    .addComponent(jButton1))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Description Seeker");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(selectWavLabel)
                        .addGap(21, 21, 21)
                        .addComponent(browseWavButton)
                        .addGap(18, 18, 18)
                        .addComponent(fileWavLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(selectTimedLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(browseTimedButton)
                        .addGap(18, 18, 18)
                        .addComponent(fileTimedLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(startTimeLabel)
                        .addGap(18, 18, 18)
                        .addComponent(startTimeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(startTimeButton)))
                .addContainerGap(234, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(browseWavButton)
                    .addComponent(selectWavLabel)
                    .addComponent(fileWavLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectTimedLabel)
                    .addComponent(browseTimedButton)
                    .addComponent(fileTimedLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startTimeLabel)
                    .addComponent(startTimeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startTimeButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void hideButton() {
        startTimeButton.setVisible(false);
    }
    
    // wavPath available to browse and play buttons
    String wavPath;
    Media hit;
    MediaPlayer mediaPlayer;
    private void browseWavButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseWavButtonActionPerformed
        //Create a file chooser
        final JFileChooser fc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "WAV file", "wav");
        fc.setFileFilter(filter);
        int returnVal = fc.showOpenDialog(null);
        File wavFile = fc.getSelectedFile();
        URI path = wavFile.toURI();
        wavPath = path.toString();
        String fileName = fc.getName(wavFile);
        fileWavLabel.setText(fileName);
        //Initialize MediaPlayer instance
        JFXPanel forToolkit = new JFXPanel();
        hit = new Media(wavPath);
        mediaPlayer = new MediaPlayer(hit);
    }//GEN-LAST:event_browseWavButtonActionPerformed
    
    String textPath;
    BufferedReader bufRead;
    private void browseTimedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseTimedButtonActionPerformed
        //Create a file chooser
        final JFileChooser fc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "TEXT file", "txt");
        fc.setFileFilter(filter);
        int returnVal = fc.showOpenDialog(null);
        File textFile = fc.getSelectedFile();
        try {
            FileReader timedText = new FileReader(textFile);
            bufRead = new BufferedReader(timedText);
            //Get filename and display in GUI
            URI path = textFile.toURI();
            textPath = path.toString();
            String fileName = fc.getName(textFile);
            fileTimedLabel.setText(fileName);
            //reveal button to calculate start times
            startTimeButton.setVisible(true);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_browseTimedButtonActionPerformed
    
    Date startTime;
    List<Double> inTimes = new ArrayList<>();
    int arrayPosition = 0;
    private void startTimeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startTimeButtonActionPerformed
        //Parsing timecode strings to dates and calculating milliseconds
        //http://stackoverflow.com/questions/8826270/how-to-convert-hhmmss-sss-to-milliseconds
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        sdf.setTimeZone(TimeZone.getTimeZone("UTC"));
        try {
            //Retrieve startTimeField value and convert to milliseconds:
            //JOptionPane.showMessageDialog(this, startTimeField.getText());
            startTime = sdf.parse("1970-01-01 " + startTimeField.getText());
        } catch (ParseException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        String myLine = null;
        
        try {
            while ((myLine = bufRead.readLine()) != null) {
                if (myLine.isEmpty()) {
                    continue;
                } else {
                    String time = myLine.substring(1, 9);
                    Date myTime = sdf.parse("1970-01-01 " + time);
                    double resolvedTime = myTime.getTime() - startTime.getTime();
                    inTimes.add(resolvedTime);
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        startTimeButton.setText("Loaded Successfully");
    }//GEN-LAST:event_startTimeButtonActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        
        //Play next time in List inTimes
        arrayPosition = arrayPosition + 1;
        Duration seekVal = Duration.millis(inTimes.get(arrayPosition));
        //JOptionPane.showMessageDialog(null, inTimes.get(2));
        mediaPlayer.seek(seekVal);
        mediaPlayer.play();
    }//GEN-LAST:event_nextButtonActionPerformed

    private void prevButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevButtonActionPerformed
        //Play previous in time;
        if (arrayPosition > 0) {
            arrayPosition = arrayPosition - 1;
        }
        Duration seekVal = Duration.millis(inTimes.get(arrayPosition));
        mediaPlayer.seek(seekVal);
        mediaPlayer.play();
        
    }//GEN-LAST:event_prevButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Stop playback
        mediaPlayer.stop();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseTimedButton;
    private javax.swing.JButton browseWavButton;
    private javax.swing.JLabel fileTimedLabel;
    private javax.swing.JLabel fileWavLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton nextButton;
    private javax.swing.JButton prevButton;
    private javax.swing.JLabel selectTimedLabel;
    private javax.swing.JLabel selectWavLabel;
    private javax.swing.JButton startTimeButton;
    private javax.swing.JFormattedTextField startTimeField;
    private javax.swing.JLabel startTimeLabel;
    // End of variables declaration//GEN-END:variables
}